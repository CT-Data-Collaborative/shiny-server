{
    "collab_server" : "",
    "contents" : "#Creates csv files\n#Runs once when data needs to be generated (new data gets updated)\n\nlibrary(RCurl)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(datapkg)\nlibrary(tidyr)\nlibrary(plotly)\nlibrary(rgdal)\nlibrary(censusr)\n\n######################################################################################################################################\nmylist <- c(\"Statewide\", \"Southwest Region\",\"South Central Region\",\n                                    \"Eastern Region\",\"North Central Region\",\"Western Region\",\"Central Region\")\nregion_list <- c(\"Connecticut\", \"Region 1:Southwest\",  \"Region 2:South Central\",  \"Region 3:Eastern\", \n                 \"Region 4:North Central\", \"Region 5:Western\", \"Region 6:Central\")\n\nregion_list2 <- c(\"Other\", \"Region 1: Southwest\",  \"Region 2: South Central\", \"Region 3: Eastern\", \n                  \"Region 4: North Central\", \"Region 5: Western\", \"Region 6: Central\")\n\n##Read in data\n#######REGION MAPS############################################################################################################################\nCT_towns_shp <- readOGR(dsn = \"./Shapefile\", layer = \"cb_2016_09_cousub_500k\", verbose = FALSE)\nCT_towns <- fortify(CT_towns_shp, region = \"NAME\")\ndcf_regions <- read.csv(paste0(path_to_raw, \"/\", \"dcf-regions.csv\"), stringsAsFactors = F, header=T, check.names = F)\ndcf_regions_CT <- dcf_regions %>% \n  mutate(Value = 1)\ndcf_regions_1 <- dcf_regions %>% \n  mutate(Value = ifelse(grepl(\"1\", Region), 1, 0))\ndcf_regions_2 <- dcf_regions %>% \n    mutate(Value = ifelse(grepl(\"2\", Region), 1, 0))\ndcf_regions_3 <- dcf_regions %>% \n    mutate(Value = ifelse(grepl(\"3\", Region), 1, 0))\ndcf_regions_4 <- dcf_regions %>% \n    mutate(Value = ifelse(grepl(\"4\", Region), 1, 0))\ndcf_regions_5 <- dcf_regions %>% \n    mutate(Value = ifelse(grepl(\"5\", Region), 1, 0))\ndcf_regions_6 <- dcf_regions %>% \n    mutate(Value = ifelse(grepl(\"6\", Region), 1, 0))\ndcf_regions_CT<-merge(CT_towns, dcf_regions_CT, by.x=\"id\", by.y = \"Town\", all=TRUE)\ndcf_regions_1<-merge(CT_towns, dcf_regions_1, by.x=\"id\", by.y = \"Town\", all=TRUE)\ndcf_regions_2<-merge(CT_towns, dcf_regions_2, by.x=\"id\", by.y = \"Town\", all=TRUE)\ndcf_regions_3<-merge(CT_towns, dcf_regions_3, by.x=\"id\", by.y = \"Town\", all=TRUE)\ndcf_regions_4<-merge(CT_towns, dcf_regions_4, by.x=\"id\", by.y = \"Town\", all=TRUE)\ndcf_regions_5<-merge(CT_towns, dcf_regions_5, by.x=\"id\", by.y = \"Town\", all=TRUE)\ndcf_regions_6<-merge(CT_towns, dcf_regions_6, by.x=\"id\", by.y = \"Town\", all=TRUE)\n############################################################################\n# Write to File\nwrite.table(dcf_regions_CT, file.path(path_to_data, \"dcf_regions_CT.csv\"), sep = \",\", row.names = F)\nwrite.table(dcf_regions_1, file.path(path_to_data, \"dcf_regions_1.csv\"), sep = \",\", row.names = F)\nwrite.table(dcf_regions_2, file.path(path_to_data, \"dcf_regions_2.csv\"), sep = \",\", row.names = F)\nwrite.table(dcf_regions_3, file.path(path_to_data, \"dcf_regions_3.csv\"), sep = \",\", row.names = F)\nwrite.table(dcf_regions_4, file.path(path_to_data, \"dcf_regions_4.csv\"), sep = \",\", row.names = F)\nwrite.table(dcf_regions_5, file.path(path_to_data, \"dcf_regions_5.csv\"), sep = \",\", row.names = F)\nwrite.table(dcf_regions_6, file.path(path_to_data, \"dcf_regions_6.csv\"), sep = \",\", row.names = F)\n#######HEALTH############################################################################################################################\nprint(\"health\")\nhealth <- read.csv(\"./raw/all_years_FM_UNSUPPRESSED.csv\", stringsAsFactors = F, header=T, check.names=F)\nhealth <- health[health$AGGREGATION == \"5-Year\",]\nnames(health)[names(health) == \"Town/County\"] <- \"Town\"\nhealth_regions <- merge(health, dcf_regions, by = c(\"Town\", \"FIPS\"), all.y=T)\nmax_year_health_regions <- \"2010-2014\"\nhealth_regions$Region <- mylist[match(health_regions$Region, region_list)]\n############################################################################\nhealth_rates <- read.csv(\"./raw/all_years_FM_with_race_rates_UNSUPPRESSED.csv\", stringsAsFactors = F, header=T, check.names=F)\nhealth_rates <- health_rates[health_rates$AGGREGATION == \"5-Year\",]\nnames(health_rates)[names(health_rates) == \"GEOG_name\"] <- \"Town\"\nhealth_rates_regions <- merge(health_rates, dcf_regions, by = c(\"Town\"), all.y=T)\nmax_year_health_rates_regions <- \"2010-2014\"\nhealth_rates_regions$Region <- mylist[match(health_rates_regions$Region, region_list)]\n############################################################################\n#Write to File\nwrite.table(health_regions, file.path(path_to_data, \"health_regions.csv\"), sep = \",\", row.names = F)\nwrite.table(health_rates_regions, file.path(path_to_data, \"health_rates_regions.csv\"), sep = \",\", row.names = F)\n#######EARLY CHILDHOOD############################################################################################################################\nprint(\"early childhood\")\nb23 <- read.csv(\"./raw/birth_to_three_annual_2016_UNSUPPRESSED.csv\", stringsAsFactors = F, header=T, check.names=F)\nb23_regions <- merge(b23, dcf_regions, by = c(\"Town\", \"FIPS\"))\nb23_regions <- b23_regions[b23_regions$`Measure Period` == \"Calendar Year\",]\nmax_year_b23_regions <- max(b23_regions$Year)\nb23_regions$Region <- mylist[match(b23_regions$Region, region_list)]\n############################################################################\ntotal_births <- read.csv(\"./raw/maternal_characteristics_UNSUPRESSEDbackground_1-Year.csv\", stringsAsFactors = F, header=T, check.names=F)\nb23c <- read.csv(\"./raw/birth_to_three_cohort_2013_UNSUPPRESSED.csv\", stringsAsFactors = F, header=T, check.names=F)\nb23c_regions <- merge(b23c, dcf_regions, by = c(\"Town\", \"FIPS\"))\nmax_year_b23c_regions <- max(b23c_regions$Year)\ntotal_births <- total_births %>% \n  filter(`Birth Weight` == \"All\",\n         `Gestational Age` == \"All\",\n         `Mother's Education` == \"All\",\n         `Mother's Marital Status` == \"All\",\n         `Measure Type` == \"Number\",\n         `Year` == as.numeric(max_year_b23c_regions)) %>% \n  select(Town, Year, Value) %>% \n  rename(`Total Births` = Value)\nb23c_regions <- merge(b23c_regions, total_births, by = c(\"Town\", \"Year\"))\nb23c_regions$Region <- mylist[match(b23c_regions$Region, region_list)]\n############################################################################\n#Write to File\nwrite.table(b23_regions, file.path(path_to_data, \"b23_regions.csv\"), sep = \",\", row.names = F)\nwrite.table(b23c_regions, file.path(path_to_data, \"b23c_regions.csv\"), sep = \",\", row.names = F)\n############JUVENILE JUSTICE######################################################################################################################\nprint(\"juvenile justice\")\njj_data1 <- getURL('http://data.ctdata.org/dataset/17cf405f-ab97-449e-8e1f-12aebbbaa349/resource/3b9fc9e0-ff21-44b1-9c7f-656dbb6b3c77/download/juvenile-arrests2015.csv')\njj <- read.csv(textConnection(jj_data1), header=T, stringsAsFactors = FALSE, check.names=FALSE)\njj_regions <- merge(jj, dcf_regions, by = c(\"Town\", \"FIPS\"))\nmax_year_jj_regions <- max(jj_regions$Year)\njj_regions$Region <- mylist[match(jj_regions$Region, region_list)]\n############################################################################\n#Write to File\nwrite.table(jj_regions, file.path(path_to_data, \"jj_regions.csv\"), sep = \",\", row.names = F)\n############CHILD WELFARE###############################################################################################################################################################################\nprint(\"child welfare\")\ncw_data1 <- getURL('http://data.ctdata.org/dataset/a65787c0-4cb0-494d-8537-b8826f31cfa5/resource/5f67003e-91e8-447d-868d-6b397811cfe2/download/children-in-placement-by-age.csv')\ncw <- read.csv(textConnection(cw_data1), header=T, stringsAsFactors = FALSE, check.names=FALSE)\nmax_year_cw <- max(gsub(\"SFY \", \"\", cw$Year))\nmax_year_cw <- paste(\"SFY\", max_year_cw, sep = \" \")\ncw$Region <- mylist[match(cw$Region, region_list2)]\ncw <- cw[cw$Region != \"Statewide\",]\ncw <- cw[cw$Year == max_year_cw,]\n#Create statewide values\ncw_ct <- cw %>% \n  group_by(`Location of Placement`, `Age Group`, `Type of Placement`) %>% \n  summarise(Value = sum(Value))\ncw_ct <- spread(cw_ct, `Age Group`, Value)\ncw_ct$Region <- \"Statewide\"\ncw_ct <- cw_ct %>% \n  select(Region, `Location of Placement`, `Type of Placement`, `0 to 3 Years`, `4 to 6 Years`, `7 to 12 Years`, `13 to 17 Years`, `18 Years and Over`, Total) %>% \n  arrange(desc(`Total`))\ncw_ct <- as.data.frame(cw_ct)\n#Process rest of regions\ncw_total <- cw %>% \n  group_by(Region, `Location of Placement`, `Age Group`, `Type of Placement`) %>% \n  summarise(Value = sum(Value))\ncw_total <- spread(cw_total, `Age Group`, Value)\ncw_total <- cw_total %>% \n  select(Region, `Location of Placement`, `Type of Placement`, `0 to 3 Years`, `4 to 6 Years`, `7 to 12 Years`, `13 to 17 Years`, `18 Years and Over`, Total) %>% \n  arrange(desc(`Total`))\ncw_total <- as.data.frame(cw_total)\ncw_total <- rbind(cw_total, cw_ct)\n############################################################################\ncw_data2 <- getURL('http://data.ctdata.org/dataset/bc08903d-a4d9-4094-8ddb-1baad9f99cb4/resource/feb378fc-5287-4e7a-b39a-c0c2f031f5de/download/children-in-placement-by-gender.csv')\ncw_gender <- read.csv(textConnection(cw_data2), header=T, stringsAsFactors = FALSE, check.names=FALSE)\nmax_year_cw_gender <- max(gsub(\"SFY \", \"\", cw_gender$Year))\nmax_year_cw_gender <- paste(\"SFY\", max_year_cw_gender, sep = \" \")\ncw_gender$Region <- mylist[match(cw_gender$Region, region_list2)]\ncw_gender <- cw_gender[cw_gender$Region != \"Statewide\",]\ncw_gender <- cw_gender[cw_gender$Year == max_year_cw_gender,]\n#Create statewide values\ncw_gender_ct <- cw_gender %>% \n  group_by(`Location of Placement`, Gender, `Type of Placement`) %>% \n  summarise(Value = sum(Value))\ncw_gender_ct$Region <- \"Statewide\"\ncw_gender_ct <- cw_gender_ct %>% \n  select(Region, `Location of Placement`, `Type of Placement`, Gender, Value) %>% \n  arrange(desc(`Value`))\ncw_gender_ct <- as.data.frame(cw_gender_ct)\n#Process rest of regions\ncw_gender_total <- cw_gender %>% \n  group_by(Region, `Location of Placement`, Gender, `Type of Placement`) %>% \n  summarise(Value = sum(Value))\ncw_gender_total <- cw_gender_total %>% \n  select(Region, `Location of Placement`, `Type of Placement`, Gender, Value) %>% \n  arrange(desc(`Value`))\ncw_gender_total <- as.data.frame(cw_gender_total)\ncw_gender_total <- rbind(cw_gender_total, cw_gender_ct)\n############################################################################\ncw_data3 <- getURL('http://data.ctdata.org/dataset/cc67c782-8488-406c-8398-40172deb4f37/resource/c185d000-9b63-4670-b724-cb455648f80c/download/children-in-placement-by-race.csv')\ncw_race <- read.csv(textConnection(cw_data3), header=T, stringsAsFactors = FALSE, check.names=FALSE)\nmax_year_cw_race <- max(gsub(\"SFY \", \"\", cw_race$Year))\nmax_year_cw_race <- paste(\"SFY\", max_year_cw_race, sep = \" \")\ncw_race$Region <- mylist[match(cw_race$Region, region_list2)]\ncw_race <- cw_race[cw_race$Region != \"Statewide\",]\ncw_race <- cw_race[cw_race$Year == max_year_cw_gender,]\n#Create statewide values\ncw_race_ct <- cw_race %>% \n  group_by(`Location of Placement`, `Race/Ethnicity`, `Type of Placement`) %>% \n  summarise(Value = sum(Value))\ncw_race_ct$Region <- \"Statewide\"\ncw_race_ct <- cw_race_ct %>% \n  select(Region, `Location of Placement`, `Type of Placement`, `Race/Ethnicity`, Value) %>% \n  arrange(desc(`Value`))\ncw_race_ct <- as.data.frame(cw_race_ct)\n#Process rest of regions\ncw_race_total <- cw_race %>% \n  group_by(Region, `Location of Placement`, `Race/Ethnicity`, `Type of Placement`) %>% \n  summarise(Value = sum(Value))\ncw_race_total <- cw_race_total %>% \n  select(Region, `Location of Placement`, `Type of Placement`, `Race/Ethnicity`, Value) %>% \n  arrange(desc(`Value`))\ncw_race_total <- as.data.frame(cw_race_total)\ncw_race_total <- rbind(cw_race_total, cw_race_ct)\n#backfill all races\nraces <- c(\"Black\", \"Hispanic\", \"White\", \"Other\")\nbackfill_races <- expand.grid(\n  `Region` = unique(cw_race_total$Region),\n  `Location of Placement` = unique(cw_race_total$`Location of Placement`),\n  `Type of Placement` = unique(cw_race_total$`Type of Placement`),\n  `Race/Ethnicity` = races \n)\ncw_backfill <- merge(cw_race_total, backfill_races, all.y=T)\ncw_backfill$Value[is.na(cw_backfill$Value)] <- 0\n############################################################################\ncw_data4 <- getURL('http://data.ctdata.org/dataset/73a25e29-e338-4596-afd7-307f67d7484f/resource/ce572760-8506-42c5-9ead-cddb51ee5458/download/employed-or-enrolled-youth.csv')\ncw_eey <- read.csv(textConnection(cw_data4), header=T, stringsAsFactors = FALSE, check.names=FALSE)\nmax_year_cw_eey <- max(cw_eey$Year)\ncw_eey <- cw_eey[cw_eey$Year == max_year_cw_eey & cw_eey$Value != -9999,]\ncw_eey_regions <- merge(cw_eey, dcf_regions, by = c(\"Town\", \"FIPS\"), all.x=T)\ncw_eey_regions$Region <- mylist[match(cw_eey_regions$Region, region_list)]\n############################################################################\n#Write to File\nwrite.table(cw_total, file.path(path_to_data, \"cw_total.csv\"), sep = \",\", row.names = F)\nwrite.table(cw_gender_total, file.path(path_to_data, \"cw_gender_total.csv\"), sep = \",\", row.names = F)\nwrite.table(cw_race_total, file.path(path_to_data, \"cw_race_total.csv\"), sep = \",\", row.names = F)\nwrite.table(cw_backfill, file.path(path_to_data, \"cw_backfill.csv\"), sep = \",\", row.names = F)\nwrite.table(cw_eey_regions, file.path(path_to_data, \"cw_eey_regions.csv\"), sep = \",\", row.names = F)\n########DEMOGRAPHICS####################################################################################################################################\nprint(\"demographics\")\npop_by_age_gender_df <- dir(path_to_raw, recursive=T, pattern = \"pop_by_age_gender_regions\")\npop_by_race_gender_df <- dir(path_to_raw, recursive=T, pattern = \"pop_by_race_gender_regions\")\npop_by_age_race_df <- dir(path_to_raw, recursive=T, pattern = \"pop_by_age_race_regions\")\npop_by_age_gender_regions <- read.csv(paste0(path_to_raw, \"/\", pop_by_age_gender_df), stringsAsFactors = F, header=T, check.names=F)\npop_by_race_gender_regions <- read.csv(paste0(path_to_raw, \"/\", pop_by_race_gender_df), stringsAsFactors = F, header=T, check.names=F)\npop_by_age_race_regions <- read.csv(paste0(path_to_raw, \"/\", pop_by_age_race_df), stringsAsFactors = F, header=T, check.names=F)\nmax_year_pop_regions <- max(pop_by_age_gender_regions$Year)\n############################################################################\nmhi_data <- getURL('http://data.ctdata.org/dataset/68296d39-d0f7-4e2d-ba0e-98a3463ab58f/resource/1a962569-c6b3-4031-b7b1-f051e9c12379/download/median-household-income-town-2016.csv')\nmhi_df <- read.csv(textConnection(mhi_data), header=T, stringsAsFactors = FALSE, check.names=FALSE)\nmax_year_mhi_regions <- max(mhi_df$Year)\nmhi_df <- mhi_df[mhi_df$Year == max_year_mhi_regions & mhi_df$`Race/Ethnicity` == \"All\" & mhi_df$`Measure Type` == \"Number\",]\nmhi_df_regions <- merge(mhi_df, dcf_regions, by = c(\"Town\", \"FIPS\"))\nmhi_df_regions$Region <- mylist[match(mhi_df_regions$Region, region_list)]\n############################################################################\n#Write to File\nwrite.table(pop_by_age_gender_regions, file.path(path_to_data, \"pop_by_age_gender_regions.csv\"), sep = \",\", row.names = F)\nwrite.table(pop_by_race_gender_regions, file.path(path_to_data, \"pop_by_race_gender_regions.csv\"), sep = \",\", row.names = F)\nwrite.table(pop_by_age_race_regions, file.path(path_to_data, \"pop_by_age_race_regions.csv\"), sep = \",\", row.names = F)\nwrite.table(mhi_df_regions, file.path(path_to_data, \"mhi_df_regions.csv\"), sep = \",\", row.names = F)\nwrite.table(mhi_df, file.path(path_to_data, \"mhi_df.csv\"), sep = \",\", row.names = F)\n#####BEHAVIORAL HEALTH################################################################################################################################\nprint(\"behavioral health\")\nbh_data <- dir(path_to_raw, recursive=T, pattern = \"rh.csv\")\nbh_df <- read.csv(paste0(path_to_raw, \"/\", bh_data), stringsAsFactors = FALSE, header=T, check.names=F)\nbh_df <- bh_df %>% \n  select(-c(1,3,4,5)) \nbh_df$Age <- as.numeric(bh_df$Age)\nbh_df <- bh_df[bh_df$Age < 22,]\nbh_df <- bh_df[!is.na(bh_df$full_fips),]\nbh_df$`Age Range` <- NA\nbh_df$`Age Range`[bh_df$Age <= 5] <- \"0 to 5\"\nbh_df$`Age Range`[bh_df$Age >=6 & bh_df$Age <= 9] <- \"6 to 9\"\nbh_df$`Age Range`[bh_df$Age >= 10 & bh_df$Age <= 15] <- \"10 to 15\"\nbh_df$`Age Range`[bh_df$Age >= 16 & bh_df$Age <= 19] <- \"16 to 19\"\nbh_df$`Age Range`[bh_df$Age >= 20 & bh_df$Age <= 21] <- \"20 to 21\"\n#merge in Region\nbh_df_regions <- merge(bh_df, dcf_regions, by.x = \"town_name\", by.y = \"Town\")\ncols <- c(5:28)\nbh_df_regions[cols] <- sapply(bh_df_regions[cols],as.numeric)\nbh_df_regions_calc <- bh_df_regions %>% \n  group_by(`Age Range`, Region) %>% \n  summarise(POP_all = sum(POP_all),\n            POP_nh = sum(POP_nh),\n            POP_hisp = sum(POP_hisp),\n            WHITE_all = sum(WHITE_all),\n            WHITE_nh = sum(WHITE_nh),\n            WHITE_hisp = sum(WHITE_hisp),\n            BLACK_all = sum(BLACK_all),\n            BLACK_nh = sum(BLACK_nh),\n            BLACK_hisp = sum(BLACK_hisp),\n            AMIND_all = sum(AMIND_all),\n            AMIND_nh = sum(AMIND_nh),\n            AMIND_hisp = sum(AMIND_hisp),\n            ASIAN_all = sum(ASIAN_all),\n            ASIAN_nh = sum(ASIAN_nh),\n            ASIAN_hisp = sum(ASIAN_hisp),\n            PACISL_all = sum(PACISL_all),\n            PACISL_nh = sum(PACISL_nh),\n            PACISL_hisp = sum(PACISL_hisp),\n            otherrace_all = sum(otherrace_all),\n            otherrace_nh = sum(otherrace_nh),\n            otherrace_hisp = sum(otherrace_hisp),\n            multirace_all = sum(multirace_all),\n            multirace_nh = sum(multirace_nh),\n            multirace_hisp = sum(multirace_hisp))\n#create 0 to 21 age range\nx0to21 <- bh_df_regions_calc %>% \n  group_by(Region) %>% \n  summarise(POP_all = sum(POP_all),\n            POP_nh = sum(POP_nh),\n            POP_hisp = sum(POP_hisp),\n            WHITE_all = sum(WHITE_all),\n            WHITE_nh = sum(WHITE_nh),\n            WHITE_hisp = sum(WHITE_hisp),\n            BLACK_all = sum(BLACK_all),\n            BLACK_nh = sum(BLACK_nh),\n            BLACK_hisp = sum(BLACK_hisp),\n            AMIND_all = sum(AMIND_all),\n            AMIND_nh = sum(AMIND_nh),\n            AMIND_hisp = sum(AMIND_hisp),\n            ASIAN_all = sum(ASIAN_all),\n            ASIAN_nh = sum(ASIAN_nh),\n            ASIAN_hisp = sum(ASIAN_hisp),\n            PACISL_all = sum(PACISL_all),\n            PACISL_nh = sum(PACISL_nh),\n            PACISL_hisp = sum(PACISL_hisp),\n            otherrace_all = sum(otherrace_all),\n            otherrace_nh = sum(otherrace_nh),\n            otherrace_hisp = sum(otherrace_hisp),\n            multirace_all = sum(multirace_all),\n            multirace_nh = sum(multirace_nh),\n            multirace_hisp = sum(multirace_hisp))\nx0to21$`Age Range` <- \"0 to 21\"\nbh_df_regions_calc <- as.data.frame(bh_df_regions_calc)\nbh_df_regions_calc <- rbind(bh_df_regions_calc, x0to21)\n#create final r/e groups\nbh_calc <- bh_df_regions_calc %>% \n  mutate(White = WHITE_nh, \n         Black = BLACK_nh,\n         Hispanic = POP_hisp,\n         Total = POP_all, \n         Other = AMIND_nh + ASIAN_nh + PACISL_nh + otherrace_nh + multirace_nh) %>% \n  select(`Age Range`, Region, White, Black, Hispanic, Total, Other)\n#Create CT values\nbh_calc_CT <- bh_calc %>% \n  group_by(`Age Range`) %>% \n  summarise(White = sum(White), \n         Black = sum(Black),\n         Hispanic = sum(Hispanic),\n         Total = sum(Total), \n         Other = sum(Other))\nbh_calc_CT$Region <- \"Connecticut\"\nbh_calc <- rbind(bh_calc, bh_calc_CT)\n#Calculate treatment needs\nbh_calc_long <- gather(bh_calc, `Race/Ethnicity`, Pop, 3:7)\nbh_calc_long$Tx <- round(bh_calc_long$Pop * 0.1, 0)\nbh_calc_long$Life <- round(bh_calc_long$Pop * 0.2, 0)\nbh_calc_long <- gather(bh_calc_long, Label, Value, 4:6)\nbh_calc_wide <- spread(bh_calc_long, `Race/Ethnicity`, Value)\nbh_calc_wide$`Age Range` <- factor(bh_calc_wide$`Age Range`, \n                                   levels= c(\"0 to 5\", \"6 to 9\", \"10 to 15\", \"16 to 19\", \"20 to 21\", \"0 to 21\"))\nbh_calc_wide$Label <- factor(bh_calc_wide$Label, \n                                   levels= c(\"Pop\", \"Tx\", \"Life\"))\nbh_calc_wide <- bh_calc_wide %>% \n  select(Region, `Age Range`, Label, White, Black, Hispanic, Other, Total) %>% \n  arrange(Region, `Age Range`, Label)\nbh_plot1 <- bh_calc_wide\nbh_plot1$Region <- mylist[match(bh_plot1$Region, region_list)]\nbh_plot1 <- bh_plot1[bh_plot1$Label == \"Pop\",]\n#add commas to values\nbh_calc_wide$White <- formatC(bh_calc_wide$White, format=\"d\", big.mark=\",\")\nbh_calc_wide$Black <- formatC(bh_calc_wide$Black, format=\"d\", big.mark=\",\")\nbh_calc_wide$Hispanic <- formatC(bh_calc_wide$Hispanic, format=\"d\", big.mark=\",\")\nbh_calc_wide$Other <- formatC(bh_calc_wide$Other, format=\"d\", big.mark=\",\")\nbh_calc_wide$Total <- formatC(bh_calc_wide$Total, format=\"d\", big.mark=\",\")\nbh_CT <- bh_calc_wide[bh_calc_wide$Region == \"Connecticut\",]\nbh_r1 <- bh_calc_wide[grepl(\"Region 1\", bh_calc_wide$Region),]\nbh_r2 <- bh_calc_wide[grepl(\"Region 2\", bh_calc_wide$Region),]\nbh_r3 <- bh_calc_wide[grepl(\"Region 3\", bh_calc_wide$Region),]\nbh_r4 <- bh_calc_wide[grepl(\"Region 4\", bh_calc_wide$Region),]\nbh_r5 <- bh_calc_wide[grepl(\"Region 5\", bh_calc_wide$Region),]\nbh_r6 <- bh_calc_wide[grepl(\"Region 6\", bh_calc_wide$Region),]\nbh_CT$Region <- NULL\nbh_r1$Region <- NULL\nbh_r2$Region <- NULL\nbh_r3$Region <- NULL\nbh_r4$Region <- NULL\nbh_r5$Region <- NULL\nbh_r6$Region <- NULL\nbh_CT$`Age Range` <- \" \"\nbh_r1$`Age Range` <- \" \"\nbh_r2$`Age Range` <- \" \"\nbh_r3$`Age Range` <- \" \"\nbh_r4$`Age Range` <- \" \"\nbh_r5$`Age Range` <- \" \"\nbh_r6$`Age Range` <- \" \"\nrownames(bh_r1) <- seq(length=nrow(bh_r1))\nrownames(bh_r2) <- seq(length=nrow(bh_r2))\nrownames(bh_r3) <- seq(length=nrow(bh_r3))\nrownames(bh_r4) <- seq(length=nrow(bh_r4))\nrownames(bh_r5) <- seq(length=nrow(bh_r5))\nrownames(bh_r6) <- seq(length=nrow(bh_r6))\n############################################################################\n#Write to File\nwrite.table(bh_CT, file.path(path_to_data, \"bh_CT.csv\"), sep = \",\", row.names = F)\nwrite.table(bh_r1, file.path(path_to_data, \"bh_r1.csv\"), sep = \",\", row.names = F)\nwrite.table(bh_r2, file.path(path_to_data, \"bh_r2.csv\"), sep = \",\", row.names = F)\nwrite.table(bh_r3, file.path(path_to_data, \"bh_r3.csv\"), sep = \",\", row.names = F)\nwrite.table(bh_r4, file.path(path_to_data, \"bh_r4.csv\"), sep = \",\", row.names = F)\nwrite.table(bh_r5, file.path(path_to_data, \"bh_r5.csv\"), sep = \",\", row.names = F)\nwrite.table(bh_r6, file.path(path_to_data, \"bh_r6.csv\"), sep = \",\", row.names = F)\nwrite.table(bh_plot1, file.path(path_to_data, \"bh_plot1.csv\"), sep = \",\", row.names = F)\n####EDUCATION########################################################################################################################\nprint(\"education\")\nmyfile <- getURL('http://data.ctdata.org/dataset/8cad880f-4db0-4201-afa2-60a471fbc2fd/resource/ffec92b1-6412-40fa-9b05-81daa17ea69a/download/educationalneed2016-2017.csv')\nedu <- read.csv(textConnection(myfile), header=T, stringsAsFactors = FALSE, check.names=FALSE)\nmax_year_edu <- max(edu$Year)\nmyfile2 <- getURL('http://data.ctdata.org/dataset/960ffb0e-d483-4afb-acf4-f16be9afa057/resource/64a81f36-c468-428a-bc58-32023134d0c2/download/suspensionraterace2010-2016.csv')\nedu2 <- read.csv(textConnection(myfile2), header=T, stringsAsFactors = FALSE, check.names=FALSE)\nmax_year_edu2 <- max(edu2$Year)\nmyfile3 <- getURL('http://data.ctdata.org/dataset/4ceffd37-a05c-47d4-89da-4e856b514341/resource/abc9a699-b880-4a7d-8b5c-d3e2a8ad2239/download/sanctions2010-2017.csv')\nedu3 <- read.csv(textConnection(myfile3), header=T, stringsAsFactors = FALSE, check.names=FALSE)\nmax_year_edu3 <- max(edu3$Year)\nmyfile4 <- getURL('http://data.ctdata.org/dataset/f6c789e8-fabc-467c-8441-dc639621ff0b/resource/bdfe5fe1-af80-4500-9e1f-5b842bbcb978/download/incidents2010-2017.csv')\nedu4 <- read.csv(textConnection(myfile4), header=T, stringsAsFactors = FALSE, check.names=FALSE)\nmax_year_edu4 <- max(edu4$Year)\n# kei <- read.csv(\"./raw/kindergarten-entrance-inventory-2017_UNSUPPRESSED.csv\", stringsAsFactors = F, header=T, check.names=F)\n# max_year_kei <- max(kei$Year)\n############################################################################\n#Write to File\nwrite.table(bh_CT, file.path(path_to_data, \"bh_CT.csv\"), sep = \",\", row.names = F)\nwrite.table(edu, file.path(path_to_data, \"edu.csv\"), sep = \",\", row.names = F)\nwrite.table(edu2, file.path(path_to_data, \"edu2.csv\"), sep = \",\", row.names = F)\nwrite.table(edu3, file.path(path_to_data, \"edu3.csv\"), sep = \",\", row.names = F)\nwrite.table(edu4, file.path(path_to_data, \"edu4.csv\"), sep = \",\", row.names = F)\nprint(\"End reading data\")\n\n",
    "created" : 1517599300083.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3389272142",
    "id" : "A2506287",
    "lastKnownWriteTime" : 1517599496,
    "last_content_update" : 1517599496663,
    "path" : "/srv/shinyapps/appdir/CONNECT2/scripts/process_data_create_csvs.R",
    "project_path" : "scripts/process_data_create_csvs.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}