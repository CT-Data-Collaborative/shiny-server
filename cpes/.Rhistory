if(is.na(indicator_list[i,j])) { #give it a starting point [row,col]
indicator_list[i,j] <- currentvalue
} else {
currentvalue <- indicator_list[i,j]
}
}
j = j+1
}
indicator_list <- data.frame(lapply(indicator_list, as.character), stringsAsFactors=FALSE)
#Recode columns
##Priority Problem
indicator_list$Alcohol[indicator_list$Alcohol == "1"] <- "Alcohol"
indicator_list$Tobacco[indicator_list$Tobacco == "1"] <- "Tobacco"
indicator_list$Marijuana[indicator_list$Marijuana == "1"] <- "Marijuana"
indicator_list$Prescription.Drugs[indicator_list$Prescription.Drugs == "1"] <- "Prescription Drugs"
indicator_list$Heroin[indicator_list$Heroin == "1"] <- "Heroin"
indicator_list$Cocaine[indicator_list$Cocaine == "1"] <- "Cocaine"
indicator_list$Other.Illicit.Drugs[indicator_list$Other.Illicit.Drugs == "1"] <- "Other Illicit Drugs"
indicator_list$Suicide[indicator_list$Suicide == "1"] <- "Suicide"
indicator_list$Problem.Gambling[indicator_list$Problem.Gambling == "1"] <- "Problem Gambling"
indicator_list$Mental.Health[indicator_list$Mental.Health == "1"] <- "Mental Health"
##Age Group
indicator_list$Ages.12.17[indicator_list$Ages.12.17 == "1"] <- "Ages 12-17"
indicator_list$Ages.18.25[indicator_list$Ages.18.25 == "1"] <- "Ages 18-25"
indicator_list$Ages.26.[indicator_list$Ages.26. == "1"] <- "Ages 26+"
##Dimensions
indicator_list$Gender[indicator_list$Gender == "1"] <- "Gender"
indicator_list$Race.Ethnicity[indicator_list$Race.Ethnicity == "1"] <- "Race/Ethnicity"
indicator_list$Age <- NA
indicator_list$Age[!is.na(indicator_list$Ages.12.17)] <- "Age"
indicator_list$Age[!is.na(indicator_list$Ages.18.25)] <- "Age"
indicator_list$Age[!is.na(indicator_list$Ages.26.)] <- "Age"
indicator_list$Age[grepl("\\+", indicator_list$Other)] <- "Age"
indicator_list$Age[grepl("older", indicator_list$Other)] <- "Age"
indicator_list$Grade <- NA
indicator_list$Grade[grepl("Grade", indicator_list$Other)] <- "Grade"
indicator_list$Other2 <- NA
indicator_list$Other2[grepl("income, insurance status, disability, education", indicator_list$Other)] <- "Income, Insurance status, Disability, Education"
indicator_list$Other2[grepl("Other demographics", indicator_list$Other)] <- "Other demographics"
indicator_list$Other2[grepl("Education, Income, Community Type", indicator_list$Other)] <- "Education, Income, Community Type"
indicator_list$Other <- gsub(", income, insurance status, disability, education", "", indicator_list$Other)
indicator_list$Other <- gsub("Other demographics", "", indicator_list$Other)
indicator_list$Other <- gsub(", Education, Income, Community Type", "", indicator_list$Other)
# combine Priority Problem columns
cols <- c("Alcohol", "Tobacco", "Marijuana", "Prescription.Drugs",
"Heroin", "Cocaine", "Other.Illicit.Drugs", "Suicide",
"Problem.Gambling", "Mental.Health")
indicator_list$`Priority Problem` <- apply( indicator_list[ , cols ] , 1 , paste , collapse = ", " )
indicator_list <- indicator_list[ , !( names( indicator_list ) %in% cols ) ]
indicator_list$`Priority Problem` <- gsub(", NA", "", indicator_list$`Priority Problem`)
indicator_list$`Priority Problem` <- gsub("NA, ", "", indicator_list$`Priority Problem`)
indicator_list$`Priority Problem` <- gsub("NA", NA, indicator_list$`Priority Problem`)
# combine Age Group columns
cols <- c("Ages.12.17", "Ages.18.25", "Ages.26.", "Other")
indicator_list$`Age/Grade Available` <- apply( indicator_list[ , cols ] , 1 , paste , collapse = ", " )
indicator_list <- indicator_list[ , !( names( indicator_list ) %in% cols ) ]
indicator_list$`Age/Grade Available` <- gsub(", NA", "", indicator_list$`Age/Grade Available`)
indicator_list$`Age/Grade Available` <- gsub("NA, ", "", indicator_list$`Age/Grade Available`)
indicator_list$`Age/Grade Available` <- gsub("NA", NA, indicator_list$`Age/Grade Available`)
# combine Dimension columns
cols <- c("Gender", "Race.Ethnicity", "Age", "Grade", "Other2")
indicator_list$Dimensions <- apply( indicator_list[ , cols ] , 1 , paste , collapse = ", " )
indicator_list <- indicator_list[ , !( names( indicator_list ) %in% cols ) ]
indicator_list$Dimensions <- gsub(", NA", "", indicator_list$Dimensions)
indicator_list$Dimensions <- gsub("NA, ", "", indicator_list$Dimensions)
indicator_list$Dimensions <- gsub("NA", NA, indicator_list$Dimensions)
#Bring in keywords data
keywords <- read_excel(paste0(path_to_data, "/", all_xls[1]), sheet = 2, skip=0)
currentvalue = keywords[1,1]
for (i in 1:nrow(keywords)) {
if(is.na(keywords[i,1])) { #give it a starting point [row,col]
keywords[i,1] <- currentvalue
} else {
currentvalue <- keywords[i,1]
}
}
#Merge indicators and keywords
indicators_with_keywords <- merge(indicator_list, keywords, by = c("Source", "Indicator"), all=T)
# combine Keywords columns
cols <- c('Key Word 1', 'Key Word 2', 'Key Word 3')
indicators_with_keywords$Keywords <- apply( indicators_with_keywords[ , cols ] , 1 , paste , collapse = ", " )
indicators_with_keywords <- indicators_with_keywords[ , !( names( indicators_with_keywords ) %in% cols ) ]
indicators_with_keywords$Keywords <- gsub(", NA", "", indicators_with_keywords$Keywords)
indicators_with_keywords$Keywords <- gsub("NA", NA, indicators_with_keywords$Keywords)
#Clean up a bit
clean <- indicators_with_keywords %>%
select(Indicator, Source, Smallest.Geo.Area, Most.Recent.Year..s..Available, Dimensions, `Age/Grade Available`, `Priority Problem`, Keywords, Form, Comments...Links) %>%
rename(`Data Set` = Source, `Geography Level` = Smallest.Geo.Area, `Year(s) Available` = Most.Recent.Year..s..Available, Link = Comments...Links)
View(clean)
View(indicators_with_keywords_long)
View(indicator_list_long)
View(indicators_with_keywords)
indicator_list <- read_excel(paste0(path_to_data, "/", all_xls[2]), sheet = 3, skip=0)
View(indicator_list)
indicator_list <- data.frame(lapply(indicator_list, function(x) {gsub("Ã¼", "1", x)}))
col_indices <- c(1,13,21,22,23)
for (j in col_indices) {
index <- j
currentvalue = indicator_list[1,j]
for (i in 1:nrow(indicator_list)) {
if(is.na(indicator_list[i,j])) { #give it a starting point [row,col]
indicator_list[i,j] <- currentvalue
} else {
currentvalue <- indicator_list[i,j]
}
}
j = j+1
}
indicator_list <- data.frame(lapply(indicator_list, as.character), stringsAsFactors=FALSE)
indicator_list$Alcohol[indicator_list$Alcohol == "1"] <- "Alcohol"
indicator_list$Tobacco[indicator_list$Tobacco == "1"] <- "Tobacco"
indicator_list$Marijuana[indicator_list$Marijuana == "1"] <- "Marijuana"
indicator_list$Prescription.Drugs[indicator_list$Prescription.Drugs == "1"] <- "Prescription Drugs"
indicator_list$Heroin[indicator_list$Heroin == "1"] <- "Heroin"
indicator_list$Cocaine[indicator_list$Cocaine == "1"] <- "Cocaine"
indicator_list$Other.Illicit.Drugs[indicator_list$Other.Illicit.Drugs == "1"] <- "Other Illicit Drugs"
indicator_list$Suicide[indicator_list$Suicide == "1"] <- "Suicide"
indicator_list$Problem.Gambling[indicator_list$Problem.Gambling == "1"] <- "Problem Gambling"
indicator_list$Mental.Health[indicator_list$Mental.Health == "1"] <- "Mental Health"
##Age Group
indicator_list$Ages.12.17[indicator_list$Ages.12.17 == "1"] <- "Ages 12-17"
indicator_list$Ages.18.25[indicator_list$Ages.18.25 == "1"] <- "Ages 18-25"
indicator_list$Ages.26.[indicator_list$Ages.26. == "1"] <- "Ages 26+"
##Dimensions
indicator_list$Gender[indicator_list$Gender == "1"] <- "Gender"
indicator_list$Race.Ethnicity[indicator_list$Race.Ethnicity == "1"] <- "Race/Ethnicity"
indicator_list$Age <- NA
indicator_list$Age[!is.na(indicator_list$Ages.12.17)] <- "Age"
indicator_list$Age[!is.na(indicator_list$Ages.18.25)] <- "Age"
indicator_list$Age[!is.na(indicator_list$Ages.26.)] <- "Age"
indicator_list$Age[grepl("\\+", indicator_list$Other)] <- "Age"
indicator_list$Age[grepl("older", indicator_list$Other)] <- "Age"
indicator_list$Grade <- NA
indicator_list$Grade[grepl("Grade", indicator_list$Other)] <- "Grade"
indicator_list$Other2 <- NA
indicator_list$Other2[grepl("income, insurance status, disability, education", indicator_list$Other)] <- "Income, Insurance status, Disability, Education"
indicator_list$Other2[grepl("Other demographics", indicator_list$Other)] <- "Other demographics"
indicator_list$Other2[grepl("Education, Income, Community Type", indicator_list$Other)] <- "Education, Income, Community Type"
indicator_list$Other <- gsub(", income, insurance status, disability, education", "", indicator_list$Other)
indicator_list$Other <- gsub("Other demographics", "", indicator_list$Other)
indicator_list$Other <- gsub(", Education, Income, Community Type", "", indicator_list$Other)
cols <- c("Alcohol", "Tobacco", "Marijuana", "Prescription.Drugs",
"Heroin", "Cocaine", "Other.Illicit.Drugs", "Suicide",
"Problem.Gambling", "Mental.Health")
indicator_list$`Priority Problem` <- apply( indicator_list[ , cols ] , 1 , paste , collapse = ", " )
indicator_list <- indicator_list[ , !( names( indicator_list ) %in% cols ) ]
indicator_list$`Priority Problem` <- gsub(", NA", "", indicator_list$`Priority Problem`)
indicator_list$`Priority Problem` <- gsub("NA, ", "", indicator_list$`Priority Problem`)
indicator_list$`Priority Problem` <- gsub("NA", NA, indicator_list$`Priority Problem`)
# combine Age Group columns
cols <- c("Ages.12.17", "Ages.18.25", "Ages.26.", "Other")
indicator_list$`Age/Grade Available` <- apply( indicator_list[ , cols ] , 1 , paste , collapse = ", " )
indicator_list <- indicator_list[ , !( names( indicator_list ) %in% cols ) ]
indicator_list$`Age/Grade Available` <- gsub(", NA", "", indicator_list$`Age/Grade Available`)
indicator_list$`Age/Grade Available` <- gsub("NA, ", "", indicator_list$`Age/Grade Available`)
indicator_list$`Age/Grade Available` <- gsub("NA", NA, indicator_list$`Age/Grade Available`)
# combine Dimension columns
cols <- c("Gender", "Race.Ethnicity", "Age", "Grade", "Other2")
indicator_list$Dimensions <- apply( indicator_list[ , cols ] , 1 , paste , collapse = ", " )
indicator_list <- indicator_list[ , !( names( indicator_list ) %in% cols ) ]
indicator_list$Dimensions <- gsub(", NA", "", indicator_list$Dimensions)
indicator_list$Dimensions <- gsub("NA, ", "", indicator_list$Dimensions)
indicator_list$Dimensions <- gsub("NA", NA, indicator_list$Dimensions)
keywords <- read_excel(paste0(path_to_data, "/", all_xls[1]), sheet = 2, skip=0)
currentvalue = keywords[1,1]
for (i in 1:nrow(keywords)) {
if(is.na(keywords[i,1])) { #give it a starting point [row,col]
keywords[i,1] <- currentvalue
} else {
currentvalue <- keywords[i,1]
}
}
indicators_with_keywords <- merge(indicator_list, keywords, by = c("Source", "Indicator"), all=T)
View(indicators_with_keywords)
cols <- c('Key Word 1', 'Key Word 2', 'Key Word 3')
indicators_with_keywords$Keywords <- apply( indicators_with_keywords[ , cols ] , 1 , paste , collapse = ", " )
indicators_with_keywords <- indicators_with_keywords[ , !( names( indicators_with_keywords ) %in% cols ) ]
indicators_with_keywords$Keywords <- gsub(", NA", "", indicators_with_keywords$Keywords)
indicators_with_keywords$Keywords <- gsub("NA", NA, indicators_with_keywords$Keywords)
clean <- indicators_with_keywords %>%
select(Indicator, Source, Smallest.Geo.Area, Most.Recent.Year..s..Available, Dimensions, `Age/Grade Available`, `Priority Problem`, Keywords, Form__1, Link) %>%
rename(`Data Set` = Source, `Geography Level` = Smallest.Geo.Area, `Year(s) Available` = Most.Recent.Year..s..Available, Form = Form__1)
View(clean)
View(indicator_csv)
View(clean)
shiny::runApp()
library(readxl)
library(tidyr)
library(dplyr)
sub_folders <- list.files()
data_location <- grep("data$", sub_folders, value=T)
path_to_data <- (paste0(getwd(), "/", data_location))
all_xls <- dir(path_to_data, pattern = ".xls")
indicator_csv <- read.csv(paste0(path_to_data, "/", "indicator_table.csv"), stringsAsFactors = F, header=T, check.names=F)
# indicator_csv$slug <- gsub(" ", "-", tolower(indicator_csv$`Data Set`))
# indicator_csv$Source <- factor(indicator_csv$Source, levels = c("State Department of Education",
#                                                                 "Department of Emergency Services and Public Protection",
#                                                                 "Department of Public Health",
#                                                                 "Office of the Chief Medical Examiner"))
#
dataset_csv <- read.csv(paste0(path_to_data, "/", "dataset_table.csv"), stringsAsFactors = F, header=T, check.names=F)
dataset_csv$slug <- gsub(" ", "-", tolower(dataset_csv$`Data Set`))
dataset_csv$Source <- factor(dataset_csv$Source, levels = c("State Department of Education",
"Department of Emergency Services and Public Protection",
"Department of Public Health",
"Office of the Chief Medical Examiner"))
sources <- unique(dataset_csv$Source)
indicator_list <- read_excel(paste0(path_to_data, "/", all_xls[2]), sheet = 3, skip=0)
##Clean up indicator list
#Convert "Ã¼" to "1"
indicator_list <- data.frame(lapply(indicator_list, function(x) {gsub("Ã¼", "1", x)}))
#populate blank rows in columns, with carry over values from populated rows
#we're populating these columns
col_indices <- c(1,13,21,22,23)
for (j in col_indices) {
index <- j
currentvalue = indicator_list[1,j]
for (i in 1:nrow(indicator_list)) {
if(is.na(indicator_list[i,j])) { #give it a starting point [row,col]
indicator_list[i,j] <- currentvalue
} else {
currentvalue <- indicator_list[i,j]
}
}
j = j+1
}
indicator_list <- data.frame(lapply(indicator_list, as.character), stringsAsFactors=FALSE)
#Recode columns
##Priority Problem
indicator_list$Alcohol[indicator_list$Alcohol == "1"] <- "Alcohol"
indicator_list$Tobacco[indicator_list$Tobacco == "1"] <- "Tobacco"
indicator_list$Marijuana[indicator_list$Marijuana == "1"] <- "Marijuana"
indicator_list$Prescription.Drugs[indicator_list$Prescription.Drugs == "1"] <- "Prescription Drugs"
indicator_list$Heroin[indicator_list$Heroin == "1"] <- "Heroin"
indicator_list$Cocaine[indicator_list$Cocaine == "1"] <- "Cocaine"
indicator_list$Other.Illicit.Drugs[indicator_list$Other.Illicit.Drugs == "1"] <- "Other Illicit Drugs"
indicator_list$Suicide[indicator_list$Suicide == "1"] <- "Suicide"
indicator_list$Problem.Gambling[indicator_list$Problem.Gambling == "1"] <- "Problem Gambling"
indicator_list$Mental.Health[indicator_list$Mental.Health == "1"] <- "Mental Health"
##Age Group
indicator_list$Ages.12.17[indicator_list$Ages.12.17 == "1"] <- "Ages 12-17"
indicator_list$Ages.18.25[indicator_list$Ages.18.25 == "1"] <- "Ages 18-25"
indicator_list$Ages.26.[indicator_list$Ages.26. == "1"] <- "Ages 26+"
##Dimensions
indicator_list$Gender[indicator_list$Gender == "1"] <- "Gender"
indicator_list$Race.Ethnicity[indicator_list$Race.Ethnicity == "1"] <- "Race/Ethnicity"
indicator_list$Age <- NA
indicator_list$Age[!is.na(indicator_list$Ages.12.17)] <- "Age"
indicator_list$Age[!is.na(indicator_list$Ages.18.25)] <- "Age"
indicator_list$Age[!is.na(indicator_list$Ages.26.)] <- "Age"
indicator_list$Age[grepl("\\+", indicator_list$Other)] <- "Age"
indicator_list$Age[grepl("older", indicator_list$Other)] <- "Age"
indicator_list$Grade <- NA
indicator_list$Grade[grepl("Grade", indicator_list$Other)] <- "Grade"
indicator_list$Other2 <- NA
indicator_list$Other2[grepl("income, insurance status, disability, education", indicator_list$Other)] <- "Income, Insurance status, Disability, Education"
indicator_list$Other2[grepl("Other demographics", indicator_list$Other)] <- "Other demographics"
indicator_list$Other2[grepl("Education, Income, Community Type", indicator_list$Other)] <- "Education, Income, Community Type"
indicator_list$Other <- gsub(", income, insurance status, disability, education", "", indicator_list$Other)
indicator_list$Other <- gsub("Other demographics", "", indicator_list$Other)
indicator_list$Other <- gsub(", Education, Income, Community Type", "", indicator_list$Other)
# combine Priority Problem columns
cols <- c("Alcohol", "Tobacco", "Marijuana", "Prescription.Drugs",
"Heroin", "Cocaine", "Other.Illicit.Drugs", "Suicide",
"Problem.Gambling", "Mental.Health")
indicator_list$`Priority Problem` <- apply( indicator_list[ , cols ] , 1 , paste , collapse = ", " )
indicator_list <- indicator_list[ , !( names( indicator_list ) %in% cols ) ]
indicator_list$`Priority Problem` <- gsub(", NA", "", indicator_list$`Priority Problem`)
indicator_list$`Priority Problem` <- gsub("NA, ", "", indicator_list$`Priority Problem`)
indicator_list$`Priority Problem` <- gsub("NA", NA, indicator_list$`Priority Problem`)
# combine Age Group columns
cols <- c("Ages.12.17", "Ages.18.25", "Ages.26.", "Other")
indicator_list$`Age/Grade Available` <- apply( indicator_list[ , cols ] , 1 , paste , collapse = ", " )
indicator_list <- indicator_list[ , !( names( indicator_list ) %in% cols ) ]
indicator_list$`Age/Grade Available` <- gsub(", NA", "", indicator_list$`Age/Grade Available`)
indicator_list$`Age/Grade Available` <- gsub("NA, ", "", indicator_list$`Age/Grade Available`)
indicator_list$`Age/Grade Available` <- gsub("NA", NA, indicator_list$`Age/Grade Available`)
# combine Dimension columns
cols <- c("Gender", "Race.Ethnicity", "Age", "Grade", "Other2")
indicator_list$Dimensions <- apply( indicator_list[ , cols ] , 1 , paste , collapse = ", " )
indicator_list <- indicator_list[ , !( names( indicator_list ) %in% cols ) ]
indicator_list$Dimensions <- gsub(", NA", "", indicator_list$Dimensions)
indicator_list$Dimensions <- gsub("NA, ", "", indicator_list$Dimensions)
indicator_list$Dimensions <- gsub("NA", NA, indicator_list$Dimensions)
#Bring in keywords data
keywords <- read_excel(paste0(path_to_data, "/", all_xls[1]), sheet = 2, skip=0)
currentvalue = keywords[1,1]
for (i in 1:nrow(keywords)) {
if(is.na(keywords[i,1])) { #give it a starting point [row,col]
keywords[i,1] <- currentvalue
} else {
currentvalue <- keywords[i,1]
}
}
#Merge indicators and keywords
indicators_with_keywords <- merge(indicator_list, keywords, by = c("Source", "Indicator"), all=T)
# combine Keywords columns
cols <- c('Key Word 1', 'Key Word 2', 'Key Word 3')
indicators_with_keywords$Keywords <- apply( indicators_with_keywords[ , cols ] , 1 , paste , collapse = ", " )
indicators_with_keywords <- indicators_with_keywords[ , !( names( indicators_with_keywords ) %in% cols ) ]
indicators_with_keywords$Keywords <- gsub(", NA", "", indicators_with_keywords$Keywords)
indicators_with_keywords$Keywords <- gsub("NA", NA, indicators_with_keywords$Keywords)
#Clean up a bit
clean <- indicators_with_keywords %>%
select(Indicator, Source, Smallest.Geo.Area, Most.Recent.Year..s..Available, Dimensions, `Age/Grade Available`, `Priority Problem`, Keywords, Form__1, Link) %>%
rename(`Data Set` = Source, `Geography Level` = Smallest.Geo.Area, `Year(s) Available` = Most.Recent.Year..s..Available, Form = Form__1)
View(clean)
library(readxl)
library(tidyr)
library(dplyr)
sub_folders <- list.files()
data_location <- grep("data$", sub_folders, value=T)
path_to_data <- (paste0(getwd(), "/", data_location))
all_xls <- dir(path_to_data, pattern = ".xls")
indicator_csv <- read.csv(paste0(path_to_data, "/", "indicator_table.csv"), stringsAsFactors = F, header=T, check.names=F)
# indicator_csv$slug <- gsub(" ", "-", tolower(indicator_csv$`Data Set`))
# indicator_csv$Source <- factor(indicator_csv$Source, levels = c("State Department of Education",
#                                                                 "Department of Emergency Services and Public Protection",
#                                                                 "Department of Public Health",
#                                                                 "Office of the Chief Medical Examiner"))
#
dataset_csv <- read.csv(paste0(path_to_data, "/", "dataset_table.csv"), stringsAsFactors = F, header=T, check.names=F)
dataset_csv$slug <- gsub(" ", "-", tolower(dataset_csv$`Data Set`))
dataset_csv$Source <- factor(dataset_csv$Source, levels = c("State Department of Education",
"Department of Emergency Services and Public Protection",
"Department of Public Health",
"Office of the Chief Medical Examiner"))
sources <- unique(dataset_csv$Source)
indicator_list <- read_excel(paste0(path_to_data, "/", all_xls[2]), sheet = 3, skip=0)
View(indicator_csv)
View(indicator_list)
indicator_list <- read.xls(paste0(path_to_data, "/", all_xls[2]), sheet = 3)
sub_folders <- list.files()
data_location <- grep("data$", sub_folders, value=T)
path_to_data <- (paste0(getwd(), "/", data_location))
all_xls <- dir(path_to_data, pattern = ".xls")
indicator_list <- read.xls(paste0(path_to_data, "/", all_xls[2]), sheet = 3)
indicator_list <- read.xls(paste0(path_to_data, "/", "Updated_IndicatorList_03.01.18_update.xlsx"), sheet = 3)
indicator_list <- read.xls(paste0(path_to_data, "/", "Updated_IndicatorList_03.01.18_update.xlsx"), sheet = 3)
indicator_list <- read.xls(paste0(path_to_data, "/", "Updated_IndicatorList_03.01.18_update.xlsx"), sheet = 3)
View(indicator_list)
indicator_list <- read.xls(paste0(path_to_data, "/", "Updated_IndicatorList_03.01.18_update.xlsx"), sheet = 3)
View(indicator_list)
col_indices <- c(1,13,21)
for (j in col_indices) {
index <- j
currentvalue = indicator_list[1,j]
for (i in 1:nrow(indicator_list)) {
if(is.na(indicator_list[i,j])) { #give it a starting point [row,col]
indicator_list[i,j] <- currentvalue
} else {
currentvalue <- indicator_list[i,j]
}
}
j = j+1
}
indicator_list <- data.frame(lapply(indicator_list, as.character), stringsAsFactors=FALSE)
indicator_list$Source[indicator_list$Source == ""] <- NA
indicator_list$Smallest.Geo.Area[indicator_list$Smallest.Geo.Area == ""] <- NA
indicator_list$Most.Recent.Year..s..Available[indicator_list$Most.Recent.Year..s..Available == ""] <- NA
col_indices <- c(1,13,21)
for (j in col_indices) {
index <- j
currentvalue = indicator_list[1,j]
for (i in 1:nrow(indicator_list)) {
if(is.na(indicator_list[i,j])) { #give it a starting point [row,col]
indicator_list[i,j] <- currentvalue
} else {
currentvalue <- indicator_list[i,j]
}
}
j = j+1
}
indicator_list <- data.frame(lapply(indicator_list, as.character), stringsAsFactors=FALSE)
indicator_list$Alcohol[indicator_list$Alcohol == "1"] <- "Alcohol"
indicator_list$Tobacco[indicator_list$Tobacco == "1"] <- "Tobacco"
indicator_list$Marijuana[indicator_list$Marijuana == "1"] <- "Marijuana"
indicator_list$Prescription.Drugs[indicator_list$Prescription.Drugs == "1"] <- "Prescription Drugs"
indicator_list$Heroin[indicator_list$Heroin == "1"] <- "Heroin"
indicator_list$Cocaine[indicator_list$Cocaine == "1"] <- "Cocaine"
indicator_list$Other.Illicit.Drugs[indicator_list$Other.Illicit.Drugs == "1"] <- "Other Illicit Drugs"
indicator_list$Suicide[indicator_list$Suicide == "1"] <- "Suicide"
indicator_list$Problem.Gambling[indicator_list$Problem.Gambling == "1"] <- "Problem Gambling"
indicator_list$Mental.Health[indicator_list$Mental.Health == "1"] <- "Mental Health"
##Age Group
indicator_list$Ages.12.17[indicator_list$Ages.12.17 == "1"] <- "Ages 12-17"
indicator_list$Ages.18.25[indicator_list$Ages.18.25 == "1"] <- "Ages 18-25"
indicator_list$Ages.26.[indicator_list$Ages.26. == "1"] <- "Ages 26+"
##Dimensions
indicator_list$Gender[indicator_list$Gender == "1"] <- "Gender"
indicator_list$Race.Ethnicity[indicator_list$Race.Ethnicity == "1"] <- "Race/Ethnicity"
indicator_list$Age <- NA
indicator_list$Age[!is.na(indicator_list$Ages.12.17)] <- "Age"
indicator_list$Age[!is.na(indicator_list$Ages.18.25)] <- "Age"
indicator_list$Age[!is.na(indicator_list$Ages.26.)] <- "Age"
indicator_list$Age[grepl("\\+", indicator_list$Other)] <- "Age"
indicator_list$Age[grepl("older", indicator_list$Other)] <- "Age"
indicator_list$Grade <- NA
indicator_list$Grade[grepl("Grade", indicator_list$Other)] <- "Grade"
indicator_list$Other2 <- NA
indicator_list$Other2[grepl("income, insurance status, disability, education", indicator_list$Other)] <- "Income, Insurance status, Disability, Education"
indicator_list$Other2[grepl("Other demographics", indicator_list$Other)] <- "Other demographics"
indicator_list$Other2[grepl("Education, Income, Community Type", indicator_list$Other)] <- "Education, Income, Community Type"
indicator_list$Other <- gsub(", income, insurance status, disability, education", "", indicator_list$Other)
indicator_list$Other <- gsub("Other demographics", "", indicator_list$Other)
indicator_list$Other <- gsub(", Education, Income, Community Type", "", indicator_list$Other)
# combine Priority Problem columns
cols <- c("Alcohol", "Tobacco", "Marijuana", "Prescription.Drugs",
"Heroin", "Cocaine", "Other.Illicit.Drugs", "Suicide",
"Problem.Gambling", "Mental.Health")
indicator_list$`Priority Problem` <- apply( indicator_list[ , cols ] , 1 , paste , collapse = ", " )
indicator_list <- indicator_list[ , !( names( indicator_list ) %in% cols ) ]
indicator_list$`Priority Problem` <- gsub(", NA", "", indicator_list$`Priority Problem`)
indicator_list$`Priority Problem` <- gsub("NA, ", "", indicator_list$`Priority Problem`)
indicator_list$`Priority Problem` <- gsub("NA", NA, indicator_list$`Priority Problem`)
# combine Age Group columns
cols <- c("Ages.12.17", "Ages.18.25", "Ages.26.", "Other")
indicator_list$`Age/Grade Available` <- apply( indicator_list[ , cols ] , 1 , paste , collapse = ", " )
indicator_list <- indicator_list[ , !( names( indicator_list ) %in% cols ) ]
indicator_list$`Age/Grade Available` <- gsub(", NA", "", indicator_list$`Age/Grade Available`)
indicator_list$`Age/Grade Available` <- gsub("NA, ", "", indicator_list$`Age/Grade Available`)
indicator_list$`Age/Grade Available` <- gsub("NA", NA, indicator_list$`Age/Grade Available`)
# combine Dimension columns
cols <- c("Gender", "Race.Ethnicity", "Age", "Grade", "Other2")
indicator_list$Dimensions <- apply( indicator_list[ , cols ] , 1 , paste , collapse = ", " )
indicator_list <- indicator_list[ , !( names( indicator_list ) %in% cols ) ]
indicator_list$Dimensions <- gsub(", NA", "", indicator_list$Dimensions)
indicator_list$Dimensions <- gsub("NA, ", "", indicator_list$Dimensions)
indicator_list$Dimensions <- gsub("NA", NA, indicator_list$Dimensions)
#Bring in keywords data
keywords <- read_excel(paste0(path_to_data, "/", all_xls[1]), sheet = 2, skip=0)
currentvalue = keywords[1,1]
for (i in 1:nrow(keywords)) {
if(is.na(keywords[i,1])) { #give it a starting point [row,col]
keywords[i,1] <- currentvalue
} else {
currentvalue <- keywords[i,1]
}
}
#Merge indicators and keywords
indicators_with_keywords <- merge(indicator_list, keywords, by = c("Source", "Indicator"), all=T)
# combine Keywords columns
cols <- c('Key Word 1', 'Key Word 2', 'Key Word 3')
indicators_with_keywords$Keywords <- apply( indicators_with_keywords[ , cols ] , 1 , paste , collapse = ", " )
indicators_with_keywords <- indicators_with_keywords[ , !( names( indicators_with_keywords ) %in% cols ) ]
indicators_with_keywords$Keywords <- gsub(", NA", "", indicators_with_keywords$Keywords)
indicators_with_keywords$Keywords <- gsub("NA", NA, indicators_with_keywords$Keywords)
View(indicators_with_keywords)
clean <- indicators_with_keywords %>%
select(Indicator, Source, Smallest.Geo.Area, Most.Recent.Year..s..Available, Dimensions, `Age/Grade Available`, `Priority Problem`, Keywords, Form2, Link) %>%
rename(`Data Set` = Source, `Geography Level` = Smallest.Geo.Area, `Year(s) Available` = Most.Recent.Year..s..Available, Form = Form2)
View(clean)
View(indicator_list)
View(clean)
runApp()
clean$`Data Set` <- as.factor(clean$`Data Set`)
runApp()
colnames(clean)
clean$`Data Set` <- as.factor(clean$`Data Set`)
clean$`Geography Level` <- as.factor(clean$`Geography Level`)
clean$`Year(s) Available` <- as.factor(clean$`Year(s) Available`)
clean$Form <- as.factor(clean$Form)
runApp()
clean$Link[clean$Link == ""] <- NA
runApp()
my_table <- clean
View(my_table)
if (is.na(my_table$Link)) {
my_table$Indicator <- my_table$Indicator
} else {
my_table$Indicator <- createSourceLink(my_table$Link, my_table$Indicator)
}
createSourceLink <- function(url, val) {
sprintf('<a href="%s" target="_blank">%s</a>', url, val)
}
if (is.na(my_table$Link)) {
} else {
my_table$Indicator <- createSourceLink(my_table$Link, my_table$Indicator)
}
my_table <- clean
if (is.na(my_table$Link)) {
my_table$Indicator2 <- my_table$Indicator
} else {
my_table$Indicator2 <- createSourceLink(my_table$Link, my_table$Indicator)
}
grepl("NA", my_table$Indicator2)
if (grepl("NA", my_table$Indicator2)) {
my_table$Indicator2 <- my_table$Indicator
}
my_table <- clean
my_table <- my_table %>%
mutate(Indicator2 == ifelse(is.na(Link), Indicator, createSourceLink(Link, Indicator)))
my_table$Indicator2 <- NA
my_table <- my_table %>%
mutate(Indicator2 == ifelse(is.na(Link), Indicator, createSourceLink(Link, Indicator)))
View(my_table)
my_table <- clean
my_table <- my_table %>%
mutate(Indicator2 <- ifelse(is.na(Link), Indicator, createSourceLink(Link, Indicator)))
my_table <- clean
my_table <- my_table %>%
mutate(Indicator2 = ifelse(is.na(Link), Indicator, createSourceLink(Link, Indicator)))
my_table <- clean
my_table <- my_table %>%
mutate(Indicator = ifelse(is.na(Link), Indicator, createSourceLink(Link, Indicator))) %>%
select(-Indicator, -Link)
my_table <- clean
my_table <- my_table %>%
mutate(Indicator = ifelse(is.na(Link), Indicator, createSourceLink(Link, Indicator)))
runApp()
runApp()
shiny::runApp()
