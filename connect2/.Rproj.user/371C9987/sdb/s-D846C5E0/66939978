{
    "collab_server" : "",
    "contents" : "#*****************************************************************************************************************\nmylist <- c(\"Statewide\", \n            \"Southwest Region\",      #1\n            \"South Central Region\",  #2\n            \"Eastern Region\",        #3\n            \"North Central Region\",  #4\n            \"Western Region\",        #5\n            \"Central Region\")        #6\n\nregion_list <- c(\"Connecticut\",\n                 \"Region 1:Southwest\", \n                 \"Region 2:South Central\", \n                 \"Region 3:Eastern\",                 \n                 \"Region 4:North Central\",\n                 \"Region 5:Western\",\n                 \"Region 6:Central\")\n\nregion_list2 <- c(\"Other\",\n                 \"Region 1: Southwest\", \n                 \"Region 2: South Central\", \n                 \"Region 3: Eastern\",                 \n                 \"Region 4: North Central\",\n                 \"Region 5: Western\",\n                 \"Region 6: Central\")\n\nsub_folders <- list.files()\nraw_location <- grep(\"raw\", sub_folders, value=T)\ndata_location <- grep(\"data$\", sub_folders, value=T)\npath_to_json <- (paste0(getwd(), \"/\", data_location, \"/\", \"json\"))\npath_to_raw <- (paste0(getwd(), \"/\", raw_location))\nCT_towns_shp <- readOGR(dsn = \"./Shapefile\", layer = \"cb_2016_09_cousub_500k\", verbose = FALSE)\nCT_towns <- fortify(CT_towns_shp, region = \"NAME\")\n\ndistricts <- read.csv(paste0(path_to_raw, \"/\", \"ct-school-district-list-with-fips.csv\"), stringsAsFactors = F, header=T, check.names = F)\ndistrict_list <- unique(districts$FixedDistrict)\ndistrict_list <- district_list[district_list != \"Connecticut\"]\n\n#This comes in from .Rprofile\n# Sys.setenv(\"AWS_ACCESS_KEY_ID\" = \"key\",\n#            \"AWS_SECRET_ACCESS_KEY\" = \"secret_key\",\n#            \"AWS_DEFAULT_REGION\" = \"default_region\")\n\n#Read json object from s3\n#specify bucketname\ns3BucketName <- \"connect-ctdata-2\"\n\n#get list of all json files in bucket, load them into R, and convert to df\nfile_names <- grep(\".json\", grep(\"2018_test\", get_bucket_df(s3BucketName)[[\"Key\"]], value=TRUE), value=T)\n#file_name <- grep(\"dcf_regions_CT.json\", get_bucket_df(s3BucketName)[[\"Key\"]], value=TRUE)\nfor (i in 1:length(file_names)) {\n  df_name <- gsub(\".*/\\\\s*|.json.*\", \"\", file_names[i])\n  json_name <- gsub(\".*/\\\\s*|$.*\", \"\", file_names[i])\n  object <- get_object(file_names[i], s3BucketName) \n  object_data <- readBin(object, \"character\")\n  json_data <- fromJSON(object_data)\n  json_file <- lapply(json_data, function(x) {\n    x[sapply(x, is.null)] <- NA\n    unlist(x)\n  })\n  asFrame <- as.data.frame(do.call(\"rbind\", json_data), stringsAsFactors = F, check.names=F)\n  asFrame2 <- data.frame(t(asFrame), stringsAsFactors = F, check.names=F)\n  if(\"Value\" %in% colnames(asFrame2)) {\n      asFrame2$Value <- as.numeric(asFrame2$Value)\n  }\n  assign(df_name, asFrame2)\n}\n\nmax_year_edu <- max(edu$Year)\nmax_year_edu2 <- max(edu2$Year)\nmax_year_edu3 <- max(edu3$Year)\nmax_year_edu4 <- max(edu4$Year)\n\ndcf_regions <- read.csv(paste0(path_to_raw, \"/\", \"dcf-regions.csv\"), stringsAsFactors = F, header=T, check.names = F)\ndcf_regions_CT <- dcf_regions %>% \n  mutate(Value = 1)\ndcf_regions_1 <- dcf_regions %>% \n  mutate(Value = ifelse(grepl(\"1\", Region), 1, 0))\ndcf_regions_2 <- dcf_regions %>% \n    mutate(Value = ifelse(grepl(\"2\", Region), 1, 0))\ndcf_regions_3 <- dcf_regions %>% \n    mutate(Value = ifelse(grepl(\"3\", Region), 1, 0))\ndcf_regions_4 <- dcf_regions %>% \n    mutate(Value = ifelse(grepl(\"4\", Region), 1, 0))\ndcf_regions_5 <- dcf_regions %>% \n    mutate(Value = ifelse(grepl(\"5\", Region), 1, 0))\ndcf_regions_6 <- dcf_regions %>% \n    mutate(Value = ifelse(grepl(\"6\", Region), 1, 0))\n\ndcf_regions_CT<-merge(CT_towns, dcf_regions_CT, by.x=\"id\", by.y = \"Town\", all=TRUE)\ndcf_regions_1<-merge(CT_towns, dcf_regions_1, by.x=\"id\", by.y = \"Town\", all=TRUE)\ndcf_regions_2<-merge(CT_towns, dcf_regions_2, by.x=\"id\", by.y = \"Town\", all=TRUE)\ndcf_regions_3<-merge(CT_towns, dcf_regions_3, by.x=\"id\", by.y = \"Town\", all=TRUE)\ndcf_regions_4<-merge(CT_towns, dcf_regions_4, by.x=\"id\", by.y = \"Town\", all=TRUE)\ndcf_regions_5<-merge(CT_towns, dcf_regions_5, by.x=\"id\", by.y = \"Town\", all=TRUE)\ndcf_regions_6<-merge(CT_towns, dcf_regions_6, by.x=\"id\", by.y = \"Town\", all=TRUE)\n\nmax_year_health_regions <- \"2010-2014\"\nmax_year_health_rates_regions <- \"2010-2014\"\nmax_year_b23_regions <- max(b23_regions$Year)\nmax_year_b23c_regions <- max(b23c_regions$Year)\nmax_year_jj_regions <- max(jj_regions$Year)\nmax_year_pop_regions <- max(pop_by_age_gender_regions$Year)\nmax_year_mhi_regions <- max(mhi_df$Year)\nmax_year_cw_gender <- \"SFY 2013-2014\"\nmax_year_cw_race <- \"SFY 2013-2014\"\nmax_year_cw_eey <- max(cw_eey_regions$Year)\n",
    "created" : 1517599400213.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3185957548",
    "id" : "66939978",
    "lastKnownWriteTime" : 1517504879,
    "last_content_update" : 1517504879,
    "path" : "/srv/shinyapps/appdir/CONNECT2/scripts/download_jsons_from_s3.R",
    "project_path" : "scripts/download_jsons_from_s3.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}